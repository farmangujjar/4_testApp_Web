//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testApp_Web.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class testAppEntities : DbContext
    {
        public testAppEntities()
            : base("name=testAppEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Config> Configs { get; set; }
        public virtual DbSet<FbaLabelPrint> FbaLabelPrints { get; set; }
        public virtual DbSet<FBAShipment> FBAShipments { get; set; }
        public virtual DbSet<FBAShipmentDetail> FBAShipmentDetails { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<ItemsMapping> ItemsMappings { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Users_Whse> Users_Whse { get; set; }
        public virtual DbSet<FBAShipmentPallet> FBAShipmentPallets { get; set; }
        public virtual DbSet<SkuPrepInfo> SkuPrepInfoes { get; set; }
        public virtual DbSet<UserPrefix> UserPrefixes { get; set; }
        public virtual DbSet<vw_FbaShipment_PcntComplete> vw_FbaShipment_PcntComplete { get; set; }
    
        public virtual ObjectResult<string> stp_GetChoiceDropdown(string choiceName, string choiceDesc)
        {
            var choiceNameParameter = choiceName != null ?
                new ObjectParameter("ChoiceName", choiceName) :
                new ObjectParameter("ChoiceName", typeof(string));
    
            var choiceDescParameter = choiceDesc != null ?
                new ObjectParameter("ChoiceDesc", choiceDesc) :
                new ObjectParameter("ChoiceDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("stp_GetChoiceDropdown", choiceNameParameter, choiceDescParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_GetItemsInSku_Result> stp_Shipments_GetItemsInSku(Nullable<int> shipDetailID)
        {
            var shipDetailIDParameter = shipDetailID.HasValue ?
                new ObjectParameter("ShipDetailID", shipDetailID) :
                new ObjectParameter("ShipDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_GetItemsInSku_Result>("stp_Shipments_GetItemsInSku", shipDetailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> stp_Shipments_GetNextBoxNo(string shipmentID)
        {
            var shipmentIDParameter = shipmentID != null ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("stp_Shipments_GetNextBoxNo", shipmentIDParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_LabelPrintLogs_Result> stp_Shipments_LabelPrintLogs(Nullable<int> shipmentDetailID, string shipmentID)
        {
            var shipmentDetailIDParameter = shipmentDetailID.HasValue ?
                new ObjectParameter("ShipmentDetailID", shipmentDetailID) :
                new ObjectParameter("ShipmentDetailID", typeof(int));
    
            var shipmentIDParameter = shipmentID != null ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_LabelPrintLogs_Result>("stp_Shipments_LabelPrintLogs", shipmentDetailIDParameter, shipmentIDParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_Picking_Images_Result> stp_Shipments_Picking_Images(string item, string uom, Nullable<bool> onePerUom)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var onePerUomParameter = onePerUom.HasValue ?
                new ObjectParameter("onePerUom", onePerUom) :
                new ObjectParameter("onePerUom", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_Picking_Images_Result>("stp_Shipments_Picking_Images", itemParameter, uomParameter, onePerUomParameter);
        }
    
        public virtual int stp_Shipments_Picking_PrintSeqPalletLabel(string pickID, Nullable<int> user)
        {
            var pickIDParameter = pickID != null ?
                new ObjectParameter("PickID", pickID) :
                new ObjectParameter("PickID", typeof(string));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Shipments_Picking_PrintSeqPalletLabel", pickIDParameter, userParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_PrintLabels_GetConfirmInfo_Result> stp_Shipments_PrintLabels_GetConfirmInfo(Nullable<int> shipDetailID)
        {
            var shipDetailIDParameter = shipDetailID.HasValue ?
                new ObjectParameter("ShipDetailID", shipDetailID) :
                new ObjectParameter("ShipDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_PrintLabels_GetConfirmInfo_Result>("stp_Shipments_PrintLabels_GetConfirmInfo", shipDetailIDParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_PrintLabels_GetImages_Result> stp_Shipments_PrintLabels_GetImages(string fnSku)
        {
            var fnSkuParameter = fnSku != null ?
                new ObjectParameter("FnSku", fnSku) :
                new ObjectParameter("FnSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_PrintLabels_GetImages_Result>("stp_Shipments_PrintLabels_GetImages", fnSkuParameter);
        }
    
        public virtual ObjectResult<string> stp_Shipments_PrintLabels_GetPallets(Nullable<int> shipmentID, Nullable<int> shipDetailID)
        {
            var shipmentIDParameter = shipmentID.HasValue ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(int));
    
            var shipDetailIDParameter = shipDetailID.HasValue ?
                new ObjectParameter("ShipDetailID", shipDetailID) :
                new ObjectParameter("ShipDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("stp_Shipments_PrintLabels_GetPallets", shipmentIDParameter, shipDetailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> stp_Shipments_PrintLabels_PickFromPallet(Nullable<int> shipmentID, string sku, Nullable<int> user, string whseUser, Nullable<int> pallets, Nullable<System.DateTime> expDate)
        {
            var shipmentIDParameter = shipmentID.HasValue ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(int));
    
            var skuParameter = sku != null ?
                new ObjectParameter("Sku", sku) :
                new ObjectParameter("Sku", typeof(string));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            var whseUserParameter = whseUser != null ?
                new ObjectParameter("WhseUser", whseUser) :
                new ObjectParameter("WhseUser", typeof(string));
    
            var palletsParameter = pallets.HasValue ?
                new ObjectParameter("Pallets", pallets) :
                new ObjectParameter("Pallets", typeof(int));
    
            var expDateParameter = expDate.HasValue ?
                new ObjectParameter("ExpDate", expDate) :
                new ObjectParameter("ExpDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("stp_Shipments_PrintLabels_PickFromPallet", shipmentIDParameter, skuParameter, userParameter, whseUserParameter, palletsParameter, expDateParameter);
        }
    
        public virtual int stp_Shipments_PrintLabels_PickFromPallet_AddUpdate(Nullable<int> shipmentID, string itemNum, string sku, Nullable<int> seqPalletNo, string uOM, Nullable<int> qtyPicked, Nullable<int> pickedUser, string pickedWhseUser, string expDate)
        {
            var shipmentIDParameter = shipmentID.HasValue ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(int));
    
            var itemNumParameter = itemNum != null ?
                new ObjectParameter("ItemNum", itemNum) :
                new ObjectParameter("ItemNum", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("Sku", sku) :
                new ObjectParameter("Sku", typeof(string));
    
            var seqPalletNoParameter = seqPalletNo.HasValue ?
                new ObjectParameter("SeqPalletNo", seqPalletNo) :
                new ObjectParameter("SeqPalletNo", typeof(int));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var qtyPickedParameter = qtyPicked.HasValue ?
                new ObjectParameter("QtyPicked", qtyPicked) :
                new ObjectParameter("QtyPicked", typeof(int));
    
            var pickedUserParameter = pickedUser.HasValue ?
                new ObjectParameter("PickedUser", pickedUser) :
                new ObjectParameter("PickedUser", typeof(int));
    
            var pickedWhseUserParameter = pickedWhseUser != null ?
                new ObjectParameter("PickedWhseUser", pickedWhseUser) :
                new ObjectParameter("PickedWhseUser", typeof(string));
    
            var expDateParameter = expDate != null ?
                new ObjectParameter("ExpDate", expDate) :
                new ObjectParameter("ExpDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Shipments_PrintLabels_PickFromPallet_AddUpdate", shipmentIDParameter, itemNumParameter, skuParameter, seqPalletNoParameter, uOMParameter, qtyPickedParameter, pickedUserParameter, pickedWhseUserParameter, expDateParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_PrintLabels_Skus_Result> stp_Shipments_PrintLabels_Skus(Nullable<int> shipmentID, string searchText)
        {
            var shipmentIDParameter = shipmentID.HasValue ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_PrintLabels_Skus_Result>("stp_Shipments_PrintLabels_Skus", shipmentIDParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_ReprintLabels_Result> stp_Shipments_ReprintLabels(Nullable<int> shipmentDetailID, string amzShipID)
        {
            var shipmentDetailIDParameter = shipmentDetailID.HasValue ?
                new ObjectParameter("ShipmentDetailID", shipmentDetailID) :
                new ObjectParameter("ShipmentDetailID", typeof(int));
    
            var amzShipIDParameter = amzShipID != null ?
                new ObjectParameter("AmzShipID", amzShipID) :
                new ObjectParameter("AmzShipID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_ReprintLabels_Result>("stp_Shipments_ReprintLabels", shipmentDetailIDParameter, amzShipIDParameter);
        }
    
        public virtual ObjectResult<string> stp_Shipments_Shipment_GetSkuCategoryList(Nullable<int> shipmentID)
        {
            var shipmentIDParameter = shipmentID.HasValue ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("stp_Shipments_Shipment_GetSkuCategoryList", shipmentIDParameter);
        }
    
        public virtual ObjectResult<string> stp_GetWarehouseUsers(string dept, string subDept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var subDeptParameter = subDept != null ?
                new ObjectParameter("SubDept", subDept) :
                new ObjectParameter("SubDept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("stp_GetWarehouseUsers", deptParameter, subDeptParameter);
        }
    
        public virtual int stp_Shipments_PrintLabels_DeleteSku(Nullable<int> shipmentID, string sku)
        {
            var shipmentIDParameter = shipmentID.HasValue ?
                new ObjectParameter("ShipmentID", shipmentID) :
                new ObjectParameter("ShipmentID", typeof(int));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Shipments_PrintLabels_DeleteSku", shipmentIDParameter, skuParameter);
        }
    
        public virtual ObjectResult<stp_Shipments_GetWorkingShipments_Result> stp_Shipments_GetWorkingShipments(Nullable<bool> whse, Nullable<int> account, Nullable<int> user)
        {
            var whseParameter = whse.HasValue ?
                new ObjectParameter("whse", whse) :
                new ObjectParameter("whse", typeof(bool));
    
            var accountParameter = account.HasValue ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Shipments_GetWorkingShipments_Result>("stp_Shipments_GetWorkingShipments", whseParameter, accountParameter, userParameter);
        }
    }
}
